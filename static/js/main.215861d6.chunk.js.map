{"version":3,"sources":["context.js","component/Landing.js","component/SearchBar.js","component/SVGFill.js","component/ProfileCard.js","component/CardTray.js","component/ProfileContainer.js","component/CategoryTray.js","component/FullProfile.js","component/MainApp.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","filterList","state","action","member_list","active_list","active_tab","Object","create","forEach","member","category","year","push","objectSpread","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","updateList","setState","active_profile","showProfile","profile","undefined","searchUpdate","result","keys","inherits","createClass","key","value","_this2","fetch","window","location","href","then","res","json","data","year_data","members","catch","err","console","log","react_default","a","createElement","props","children","Component","Consumer","throttle","func","limit","lastFunc","lastRan","context","clearTimeout","setTimeout","Date","now","SearchBar","onChange","e","target","search_val","throttledSearch","changeSearch","matched_members","index","fname","lname","toLowerCase","indexOf","memObj","memberData","sort","b","matched_skills","skill_list","skill","replace","skillObj","skillName","onSubmit","search_result","preventDefault","search_tab","map","_ref","_ref2","searched_term","result_years","document","getElementsByClassName","blur","search_active","i","skills","j","mySkill","_this3","result_list","name","search_length","nameTag","className","substring","onClick","search_tag","results","react_transition_group","classNames","timeout","in","unmountOnExit","mountOnEnter","id","type","placeholder","contextType","ProfileCard","_props$member","src","CardTray","scrollTop","component_ProfileCard","onProfileClick","ProfileContainer","m","component_CardTray","CategoryTray","active","handleClick","el","xlinkHref","FullProfile","shrinked","scrolling","onScroll","innerWidth","element","_this$state$profile","about","transitionState","alt","style","fill","MainApp","component_SearchBar","component_ProfileContainer","component_CategoryTray","component_FullProfile","App","wave","main_active","waveLoaded","toggleMain","reverse","play","context_Provider","component_MainApp","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.215861d6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport const Context = React.createContext();\r\n\r\nconst filterList = (state, action) => {\r\n  let { member_list, active_list, active_tab } = state;\r\n  active_tab = action;\r\n  active_list = Object.create({})\r\n  member_list.forEach(member => {\r\n    if (member.category === action || action === 'all') {\r\n      if (active_list[member.year]) active_list[member.year].push(member)\r\n      else {\r\n        active_list[member.year] = []\r\n        active_list[member.year].push(member)\r\n      }\r\n    }\r\n  })\r\n  return {\r\n    ...state,\r\n    active_tab,\r\n    active_list\r\n  }\r\n}\r\n\r\n/*const searchList = (state, term) => {\r\n  let { active_list, member_list } = state;\r\n  active_list = {}\r\n  member_list.forEach(member => {\r\n    let name = member.fname + ' ' + member.lname;\r\n    if (term.toLowerCase() === name.toLowerCase()) {\r\n      if (active_list[member.year]) active_list[member.year].push(member)\r\n      else {\r\n        active_list[member.year] = []\r\n        active_list[member.year].push(member)\r\n      }\r\n    }\r\n  })\r\n  return {\r\n    ...state,\r\n    active_list\r\n  }\r\n}*/\r\n\r\n\r\nexport class Provider extends Component {\r\n\r\n  state = {\r\n    member_list: [],\r\n    active_tab: \"all\",\r\n    active_list: {},\r\n    updateList: action => this.setState(state => filterList(state, action)),\r\n    active_profile: null,\r\n    showProfile: (profile = null) => this.setState(state => { return { ...state, active_profile: profile } }),\r\n    searchUpdate: (result) => this.setState(state => {\r\n      if (Object.keys(result).length === 0) return { state }\r\n      return { ...state, active_list: result, active_tab: \"search\" }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch(window.location.href + '/mock_data.json')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        let year_data = {}\r\n        data.members.forEach(member => {\r\n          if (year_data[member.year]) {\r\n            year_data[member.year].push(member)\r\n          } else {\r\n            year_data[member.year] = [];\r\n            year_data[member.year].push(member)\r\n          }\r\n        })\r\n\r\n        this.setState({ member_list: data.members, active_list: year_data });\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react'\r\n\r\nimport '../static/Landing.css';\r\n\r\nclass Landing extends Component {\r\n\r\n  toggleMain = (e) => {\r\n    console.log(\"hello\")\r\n    if (this.props.wave) {\r\n      this.props.toggleMain();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <button onClick={this.toggleMain} style={{ zIndex: 400 }}>down</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport '../static/SearchBar.css';\r\nimport { Context } from '../context'\r\n\r\nconst throttle = (func, limit) => {\r\n  let lastFunc;\r\n  let lastRan;\r\n  return function () {\r\n    const context = this;\r\n    const args = arguments;\r\n    if (!lastRan) {\r\n      func.apply(context, args);\r\n      lastRan = Date.now()\r\n    } else {\r\n      clearTimeout(lastFunc);\r\n      lastFunc = setTimeout(function () {\r\n        if ((Date.now() - lastRan) >= limit) {\r\n          func.apply(context, args);\r\n          lastRan = Date.now()\r\n        }\r\n      }, limit - (Date.now() - lastRan))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass SearchBar extends Component {\r\n  static contextType = Context;\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      search_active: false,\r\n      search_tab: \"member\",\r\n      search_val: \"\",\r\n      matched_skills: [],\r\n      matched_members: [],\r\n      //search_result: [],\r\n    }\r\n    this.skill_list = {}\r\n    this.searched_term = \"\";\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const { member_list } = this.context;\r\n    if (member_list) {\r\n      member_list.forEach((member, i) => {\r\n        member.skills.forEach((skill, j) => {\r\n          let mySkill = skill.replace(/ /g, '_');\r\n          if (this.skill_list[mySkill]) this.skill_list[mySkill].push(member);\r\n          else {\r\n            this.skill_list[mySkill] = [];\r\n            this.skill_list[mySkill].push(member);\r\n          }\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ search_val: value })\r\n    this.throttledSearch(value)\r\n    //search\r\n  }\r\n\r\n  changeSearch = (value) => {\r\n    //console.log(Date.now())\r\n    const { member_list } = this.context;\r\n    if (value.length) {\r\n\r\n      let matched_members = [];\r\n      member_list.forEach(member => {\r\n        let name = member.fname + ' ' + member.lname;\r\n        let index = name.toLowerCase().indexOf(value.toLowerCase())\r\n        if (index !== -1) {\r\n          let memObj = {\r\n            memberData: member,\r\n            index: index\r\n          }\r\n          matched_members.push(memObj);\r\n        }\r\n      })\r\n      matched_members = matched_members.sort((a, b) => a.index - b.index);\r\n      this.setState({ matched_members: matched_members })\r\n\r\n      //first get the skill props\r\n      let matched_skills = [];\r\n      Object.keys(this.skill_list).forEach((skill) => {\r\n        let index = skill.toLowerCase().indexOf(value.toLowerCase().replace(/ /g, '_'))\r\n        if (index !== -1) {\r\n          let skillObj = {\r\n            skillName: skill,\r\n            index: index\r\n          }\r\n          matched_skills.push(skillObj)\r\n        }\r\n      })\r\n      matched_skills = matched_skills.sort((a, b) => a.index - b.index);\r\n      this.setState({ matched_skills: matched_skills })\r\n    }\r\n  }\r\n\r\n  throttledSearch = throttle(this.changeSearch, 300);\r\n\r\n  onSubmit = (e = null, search_result = []) => {\r\n    if (e) e.preventDefault()\r\n    if (search_result.length === 0) {\r\n      if (this.state.search_tab === 'member') {\r\n        search_result = this.state.matched_members.map(({ memberData }) => memberData);\r\n      }\r\n      else if (this.state.search_tab === 'skill') {\r\n        this.state.matched_skills.forEach(({ skillName }) => {\r\n          search_result.concat(this.skill_list[skillName])\r\n        })\r\n      }\r\n      this.searched_term = this.state.search_val;\r\n    }\r\n\r\n    let result_years = {}\r\n    search_result.forEach(member => {\r\n      if (result_years[member.year]) result_years[member.year].push(member)\r\n      else {\r\n        result_years[member.year] = []\r\n        result_years[member.year].push(member)\r\n      }\r\n    })\r\n    this.context.searchUpdate(result_years);\r\n    this.setState({ search_val: '', matched_skills: [], matched_members: [] })\r\n    document.getElementsByClassName('SearchBar_input')[0].blur()\r\n    document.getElementsByClassName('SearchBar_button')[0].blur()\r\n    //document.getElementsByClassName('search_option').forEach(el => el.blur())\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let result_list = [];\r\n    if (this.state.search_tab === 'member') {\r\n      if (this.state.matched_members.length) {\r\n        result_list = this.state.matched_members.map((member, i) => {\r\n\r\n          let { index, memberData } = member;\r\n          let { fname, lname, category } = memberData\r\n          let name = fname + ' ' + lname;\r\n          let search_length = this.state.search_val.length;\r\n          let nameTag = (\r\n            <span className=\"name\">\r\n              {name.substring(0, index)}<b>{name.substring(index, index + search_length)}</b>{name.substring(index + search_length)}\r\n            </span>\r\n          )\r\n          return (\r\n            <li\r\n              className=\"people\"\r\n              key={i}\r\n              onClick={() => {\r\n                this.searched_term = memberData.fname + ' ' + memberData.lname;\r\n                this.onSubmit(null, [memberData])\r\n              }}\r\n            >\r\n              {nameTag}\r\n              <span className={`skill skill-${category}`}>{category}</span>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n      else {\r\n        result_list = <li className=\"people\"><span className=\"name\">No members found</span></li>\r\n      }\r\n    }\r\n    else {\r\n      if (this.state.matched_skills.length) {\r\n        result_list = this.state.matched_skills.map((skill, i) => {\r\n\r\n          let { index, skillName } = skill;\r\n          let search_length = this.state.search_val.length;\r\n          skillName = skillName.replace(/_/g, ' ');\r\n          let search_tag = (\r\n            <span className=\"name\">\r\n              {skillName.substring(0, index)}<b>{skillName.substring(index, index + search_length)}</b>{skillName.substring(index + search_length)}\r\n            </span>\r\n          )\r\n\r\n          return (\r\n            <li\r\n              className=\"people\"\r\n              key={i}\r\n              onClick={() => {\r\n                this.searched_term = skill.skillName;\r\n                this.onSubmit(null, this.skill_list[skill.skillName])\r\n              }}\r\n            >\r\n              {search_tag}\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n      else {\r\n        result_list = <li className=\"people\"><span className=\"name\">No skills found</span></li>\r\n      }\r\n    }\r\n\r\n    const results = (\r\n      <CSSTransition\r\n        classNames=\"overlay_fade\"\r\n        timeout={300}\r\n        in={this.state.search_val.length > 0 && (this.state.matched_members.length > 0 || this.state.matched_skills.length > 0)}\r\n        unmountOnExit\r\n        mountOnEnter\r\n      >\r\n        <div className=\"SearchBar_result\">\r\n          <div className=\"SearchBar_overlay\"  ></div>\r\n\r\n          <div className=\"SearchBar_result_list\">\r\n            {\r\n              (this.state.matched_members.length > 0 || this.state.matched_skills.length > 0) ? (\r\n                <div className=\"SearchBar_people\">\r\n                  <div className=\"people_heading\">\r\n                    <div\r\n                      className={`search_option ${(this.state.search_tab) === 'member' ? 'search_option_active' : ''}`}\r\n                      id=\"search_people\"\r\n                      onClick={() => this.setState({ search_tab: 'member' })}\r\n                    >members ({this.state.matched_members.length})</div>\r\n                    <div\r\n                      className={`search_option ${(this.state.search_tab) === 'skill' ? 'search_option_active' : ''}`}\r\n                      id=\"search_skills\"\r\n                      onClick={() => this.setState({ search_tab: 'skill' })}\r\n                    >skills ({this.state.matched_skills.length})</div>\r\n                  </div>\r\n                  <div className=\"people_list_box\">\r\n                    <ul className=\"people_list\">\r\n                      {result_list}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n\r\n              ) : null\r\n            }\r\n\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n    )\r\n\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        {/*<div className=\"landpage_btn\" onClick={this.props.toggleMain}></div>*/}\r\n        <div className=\"SearchBar_gradient_box\">\r\n          <div className=\"SearchBar_gradient\"></div>\r\n        </div>\r\n\r\n        <div className=\"SearchBar_form_container\">\r\n\r\n          <form className=\"SearchBar_form\"\r\n            onSubmit={this.onSubmit}\r\n          >\r\n            <input type=\"text\"\r\n              className=\"SearchBar_input\"\r\n              placeholder=\"Search Name, Skills\"\r\n              value={this.state.search_val}\r\n              onChange={this.onChange}\r\n            />\r\n            <button type=\"submit\" className=\"SearchBar_button\"><div className=\"SearchBar_input_circle\"></div></button>\r\n\r\n          </form>\r\n\r\n        </div>\r\n        {results}\r\n        <CSSTransition\r\n          classNames=\"search_flip\"\r\n          in={this.context.active_tab === 'search'}\r\n          timeout={300}\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <div className=\"SearchBar_term\">Searched for \" {this.searched_term} \"</div>\r\n        </CSSTransition>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react'\r\nimport anime from 'animejs'\r\nimport '../static/SVGFill.css';\r\nclass MyComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.animate = null;\r\n  }\r\n  componentDidMount() {\r\n    this.animate = anime({\r\n      targets: '#mypath',\r\n      d: [\r\n        { value: \"M4071,27V386.794s116.544-100.9,314.269-100.9,172.484,187.091,410.175,187.091,233.484-187.091,412.278-187.091S5437,489.8,5437,489.8V27Z\" },\r\n        { value: \"M4071,27V878.717s168.527-74.606,366.252-74.606,138.889,103.027,376.58,103.027,215.55-103.027,394.344-103.027S5437,907.138,5437,907.138V27Z\" },\r\n      ],\r\n      loop: false,\r\n      easing: \"easeInOutQuad\",\r\n      duration: 2000,\r\n      autoplay: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"wave_container\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1366 768\" preserveAspectRatio=\"none\">\r\n            <path id=\"mypath\"\r\n              d=\"M4071,27V54.452s52.243-16.817,249.969-16.817,183.567-8.375,421.258-8.375,285.609,8.7,464.4,8.7S5437,29.26,5437,29.26V27Z\"\r\n              transform=\"translate(5437 800) rotate(180)\" fill=\"#7966FF\" />\r\n          </svg>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyComponent;","import React from 'react'\r\n\r\nimport '../static/ProfileCard.css'\r\nimport { Consumer } from '../context'\r\n\r\nconst ProfileCard = (props) => {\r\n  return (\r\n    <Consumer>\r\n      {value => {\r\n        const { fname, category } = props.member\r\n        return (\r\n          <div className=\"ProfileCard\" onClick={() => value.showProfile(props.member)}>\r\n            <div className=\"ProfileCard_data\">\r\n              <div className=\"ProfileCard_imgBox\">\r\n                <img src={window.location.href + '/img/user-5.jpg'} className=\"ProfileCard_img\"></img>\r\n              </div>\r\n              <div className=\"ProfileCard_name\">{fname}</div>\r\n            </div>\r\n            <div className={`ProfileCard_category category-${category}`}>{category}</div>\r\n          </div>\r\n        )\r\n      }}\r\n\r\n    </Consumer>\r\n  )\r\n}\r\n\r\nexport default ProfileCard;","import React, { Component } from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nimport '../static/CardTray.css'\r\n\r\nimport ProfileCard from './ProfileCard';\r\n\r\nclass CardTray extends Component {\r\n  componentDidUpdate() {\r\n    document.getElementsByClassName('profile_container')[0].scrollTop = 0;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"CardTray\">\r\n        <div className=\"CardTray_container\">\r\n          <div className=\"CardTray_data\">\r\n            <div className=\"CardTray_batch\">Batch</div>\r\n            <div className=\"CardTray_year\">{this.props.year}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"CardTray_profileBlock\">\r\n\r\n          {\r\n            <TransitionGroup className=\"CardTray_ScrollTray\">\r\n              {this.props.members.map((member, i) => (\r\n                <CSSTransition\r\n                  key={i}\r\n                  classNames=\"profile_card_anim\"\r\n                  timeout={200}\r\n                >\r\n                  <ProfileCard member={member} onProfileClick={this.props.onProfileClick} />\r\n                </CSSTransition>\r\n              )\r\n              )}\r\n            </TransitionGroup>\r\n\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardTray;\r\n","import React, { Component } from 'react';\r\n\r\nimport '../static/ProfileContainer.css'\r\n\r\nimport { Consumer } from '../context'\r\nimport CardTray from './CardTray'\r\n\r\nclass ProfileContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"profile_container\">\r\n        <Consumer>\r\n          {value =>\r\n            Object.keys(value.active_list).map(m => (\r\n              <CardTray\r\n                key={m}\r\n                year={m}\r\n                members={value.active_list[m]}\r\n              />\r\n            ))\r\n          }\r\n        </Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileContainer;\r\n","import React, { Component } from 'react';\r\n\r\nimport '../static/CategoryTray.css'\r\nimport { Consumer } from '../context'\r\n\r\nclass CategoryTray extends Component {\r\n  state = {\r\n    active: \"all\"\r\n  }\r\n\r\n  handleClick = (value, e) => {\r\n    this.setState({ active: value })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          return (<div className=\"CategoryTray\">\r\n            <div className=\"CategoryTray_options\">\r\n              {\r\n                [\"all\", \"backend\", \"frontend\", \"graphics\", \"mobile\"].map((el) => {\r\n                  return (\r\n                    <div key={el} value={el}\r\n                      className={`CategoryTray_category ${(value.active_tab === el) ? 'active' : ''}`}\r\n                      onClick={() => {\r\n                        value.updateList(el)\r\n                      }}\r\n                    >\r\n                      <div className=\"CategoryTray_image\">\r\n                        <svg>\r\n                          <use xlinkHref={window.location.href + `/img/svg/${el}.svg#${el}`}></use>\r\n                        </svg>\r\n                      </div>\r\n                      <div className=\"CategoryTray_name\">{el}</div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryTray;\r\n","import React, { Component } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport '../static/FullProfile.css'\r\n\r\nclass FullProfile extends Component {\r\n\r\n  state = {\r\n    shrinked: false,\r\n    scrolling: false,\r\n    profile: null\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    if (window.innerWidth < 900) {\r\n      const element = e.target;\r\n      if (!this.state.scrolling) {\r\n        this.setState({ scrolling: true })\r\n        if (element.scrollTop > 0) {\r\n          this.setState({ shrinked: true })\r\n          element.scrollTop = 1;\r\n          this.setState({ scrolling: false })\r\n        }\r\n        else {\r\n          this.setState({ shrinked: false })\r\n          this.setState({ scrolling: false })\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ profile: this.props.profile })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.profile) {\r\n      let { fname, lname, year, skills, category, about } = this.state.profile;\r\n      return (\r\n        <div className=\"FullProfile\">\r\n          <CSSTransition\r\n            classNames=\"FullProfile_backdrop_anim\"\r\n            timeout={300}\r\n            in={this.props.transitionState === 'entered'}\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <div className=\"FullProfile_backdrop\"></div>\r\n          </CSSTransition>\r\n          <CSSTransition\r\n            classNames=\"FullProfile_card_anim\"\r\n            timeout={300}\r\n            in={this.props.transitionState === 'entered'}\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <div className=\"FullProfile_card\">\r\n              <div className={`FullProfile_banner ${this.state.shrinked ? 'shrinked' : ''}`}>\r\n                <div className={`dev-category category category-${category}`}>{category}</div>\r\n                <div className=\"FullProfile_image\">\r\n                  <div className=\"FullProfile_imageBox\">\r\n                    <img src={window.location.href + '/img/user-5.jpg'} alt=\"user-5\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"FullProfile_name\">{fname + ' ' + lname}</div>\r\n              </div>\r\n              <div className=\"FullProfile_wrapper\">\r\n                <div className=\"FullProfile_content\" onScroll={this.onScroll}>\r\n                  <div className=\"FullProfile_social\">\r\n                    <div className=\"FullProfile_social_icon\">\r\n                      <svg style={{ fill: \"#686262\" }}>\r\n                        <use xlinkHref={window.location.href + '/img/svg/github.svg#github'}></use>\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"FullProfile_social_icon\">\r\n                      <svg style={{ fill: \"#38BDF8\" }}>\r\n                        <use xlinkHref={window.location.href + '/img/svg/linkedin.svg#linkedin'}></use>\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"FullProfile_social_icon\">\r\n                      <svg style={{ fill: \"#669FD8\" }}>\r\n                        <use xlinkHref={window.location.href + '/img/svg/facebook.svg#facebook'}></use>\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"FullProfile_social_icon\">\r\n                      <svg style={{ fill: \"#CE4646\" }}>\r\n                        <use xlinkHref={window.location.href + '/img/svg/gmail.svg#gmail'}></use>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"FullProfile_profileData\">\r\n                    <div className=\"FullProfile_scrollTray\">\r\n                      <div className=\"FullProfile_skillbox\">\r\n                        <div className=\"FullProfile_skillHead\">\r\n                          <div className=\"skillset\">Skillset</div>\r\n                          <div className={`dev-category category category-${category}`}>{category}</div>\r\n                        </div>\r\n                        <div className=\"FullProfile_skillBody\">\r\n                          {\r\n                            skills.map((skill, i) => <div key={i} className=\"FullProfile_skill\">{skill}</div>)\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"FullProfile_skillbox\">\r\n                        <div className=\"FullProfile_skillHead\">\r\n                          <div className=\"skillset\">About Me</div>\r\n                        </div>\r\n                        <div className=\"FullProfile_aboutBody\">\r\n                          {about}\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n          </CSSTransition>\r\n\r\n          <div className=\"back_button\" onClick={() => this.props.showProfile()}>\r\n            <svg style={{ fill: \"#7966FF\" }}>\r\n              <use xlinkHref={window.location.href + '/img/svg/back.svg#back'}></use>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else return null;\r\n  }\r\n}\r\n\r\n\r\nexport default FullProfile;","import React, { Component } from 'react';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nimport '../static/MainApp.css'\r\n\r\nimport SearchBar from './SearchBar'\r\nimport ProfileContainer from './ProfileContainer'\r\nimport CategoryTray from './CategoryTray'\r\nimport FullProfile from './FullProfile'\r\nimport { Consumer } from '../context'\r\n\r\nclass MainApp extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"MainApp main_app\">\r\n        <SearchBar />\r\n        <ProfileContainer />\r\n        <CategoryTray />\r\n        <Consumer>\r\n          {value => (\r\n            <Transition\r\n              timeout={200}\r\n              in={value.active_profile !== null}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              {transitionState =>\r\n                <FullProfile\r\n                  profile={value.active_profile}\r\n                  showProfile={value.showProfile}\r\n                  transitionState={transitionState}\r\n                />\r\n              }\r\n            </Transition>\r\n          )\r\n          }\r\n        </Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainApp;\r\n","import React, { Component } from 'react';\nimport { Consumer } from './context'\nimport { CSSTransition } from 'react-transition-group'\nimport './App.css';\n\nimport Landing from './component/Landing';\nimport SVGFill from './component/SVGFill';\nimport { Provider } from './context'\nimport MainApp from './component/MainApp'\n\nclass App extends Component {\n\n  state = {\n    wave: null,\n    main_active: true\n  }\n\n  waveLoaded = (wave) => {\n    this.setState({ wave: wave })\n  }\n\n  toggleMain = () => {\n    this.state.wave.reverse();\n    this.state.wave.play();\n    this.setState(state => ({ main_active: !state.main_active }))\n  }\n\n  render() {\n    return (\n      <Provider>\n        <div className=\"App\">\n          {/*<Landing wave={this.state.wave} toggleMain={this.toggleMain} />\n          <SVGFill waveLoaded={this.waveLoaded} />*/}\n          <Consumer>\n            {value => {\n              if (value.member_list.length) return (\n                <CSSTransition\n                  classNames=\"main_app-fade\"\n                  in={this.state.main_active}\n                  timeout={1300}\n                  mountOnEnter\n                >\n                  <MainApp toggleMain={this.toggleMain} wave={this.state.wave} />\n                </CSSTransition>\n              )\n              else return null\n\n            }}\n          </Consumer>\n\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}